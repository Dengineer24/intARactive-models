/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: ravindra.mohan09 (https://sketchfab.com/ravindra.mohan09)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/spure-gear-c30bd3b9910049ad9ac479cb99e566ea
title: Spure gear
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh
    mesh_1: THREE.Mesh
    mesh_2: THREE.Mesh
    mesh_3: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
    steel2: THREE.MeshStandardMaterial
    steel1: THREE.MeshStandardMaterial
  }
}


type ActionName = 'Animation'
// type GLTFActions = Record<ActionName, THREE.AnimationAction>
type GLTFActions = {
  Animation: THREE.AnimationAction;
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/scene.gltf') as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[-1.06, 0, 0]} rotation={[Math.PI, -1.37, Math.PI]}>
            <mesh geometry={nodes.mesh_0.geometry} material={materials['Material.001']} />
            <mesh geometry={nodes.mesh_1.geometry} material={nodes.mesh_1.material} />
          </group>
          <group name="Gear002_2" position={[1.04, 0.01, 0]} rotation={[-Math.PI, 0.54, -Math.PI]}>
            <mesh geometry={nodes.mesh_2.geometry} material={materials.steel1} />
            <mesh geometry={nodes.mesh_3.geometry} material={nodes.mesh_3.material} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/scene.gltf')
